<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.orange.oss.bosh-deployer</groupId>
	<artifactId>bosh-deployer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>bosh-deployer</name>
	<description>bosh director api consumer. deploys to a director</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-feign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-hystrix</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-security</artifactId>
		</dependency>
		
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- for bosh manifest yml parsing -->
		<dependency>
		    <groupId>com.fasterxml.jackson.dataformat</groupId>
		    <artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>		
		
		<!-- for feign http proxy setting -->
		<dependency>
		    <groupId>com.netflix.feign</groupId>
		    <artifactId>feign-okhttp</artifactId>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp</groupId>
			<artifactId>okhttp</artifactId>
<!-- 			<version>2.5.0</version> -->
		</dependency>

		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
		    <groupId>commons-lang</groupId>
		    <artifactId>commons-lang</artifactId>
		    <version>2.6</version>
		</dependency>
		
		<!-- enables ca.cert setting with env var TRUSTED_CA_CERTIFICATE: -->		
<!-- 		<dependency> -->
<!--             <groupId>com.orange.clara.cloud.boot.ssl-truststore-gen</groupId> -->
<!--             <artifactId>spring-boot-ssl-truststore-gen</artifactId> -->
<!--             <version>2.0.21</version> -->
<!--         </dependency>		 -->
		
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.easytesting</groupId>
		    <artifactId>fest-assert</artifactId>
		    <version>1.4</version>
		    <scope>test</scope>
		</dependency>
		
		
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
    		<artifactId>wiremock</artifactId>
    		<version>1.58</version>
    		<scope>test</scope>	
		</dependency>


		<dependency>
		    <groupId>io.swagger</groupId>
		    <artifactId>swagger-annotations</artifactId>
		    <version>1.5.9</version>
    		<scope>test</scope>	
		</dependency>

		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.5.0</version>
		    <scope>test</scope>
		</dependency>
		

	    <!-- HTTP client: jersey-client -->
	    <dependency>
	      <groupId>com.sun.jersey</groupId>
	      <artifactId>jersey-client</artifactId>
	      <scope>test</scope>
	    </dependency>
	    
	    <dependency>
	      <groupId>com.sun.jersey.contribs</groupId>
	      <artifactId>jersey-multipart</artifactId>
	      <version>1.19.1</version>
	      <scope>test</scope>	      
	    </dependency>
	
	    <dependency>
	      <groupId>com.fasterxml.jackson.jaxrs</groupId>
	      <artifactId>jackson-jaxrs-json-provider</artifactId>
	      <scope>test</scope>	      
	    </dependency>
	    <dependency>
	      <groupId>com.fasterxml.jackson.datatype</groupId>
	      <artifactId>jackson-datatype-joda</artifactId>
	      <scope>test</scope>	      
	    </dependency>
	    <dependency>
	      <groupId>joda-time</groupId>
	      <artifactId>joda-time</artifactId>
	      <scope>test</scope>	      
	    </dependency>
	
	    <!-- Base64 encoding that works in both JVM and Android -->
	    <dependency>
	      <groupId>com.brsanthu</groupId>
	      <artifactId>migbase64</artifactId>
	      <version>2.2</version>
	      <scope>test</scope>	      
	    </dependency>
	    
	    <!--  in memory test db -->
		<dependency>
		    <groupId>org.hsqldb</groupId>
		    <artifactId>hsqldb</artifactId>
<!-- 		    <scope>test</scope>		     -->
		    <scope>runtime</scope>
		</dependency>

	</dependencies>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Brixton.SR5</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<pluginRepositories>

<!-- 		<pluginRepository> -->
<!-- 			<id>jcenter</id> -->
<!-- 			<name>JCenter-Bintray</name> -->
<!-- 			<url>http://jcenter.bintray.com</url> -->
<!-- 			<snapshots> -->
<!-- 				<enabled>false</enabled> -->
<!-- 			</snapshots> -->
<!-- 		</pluginRepository> -->
		
<!-- 		<pluginRepository> -->
<!-- 			<id>jfrog-oss-snapshots</id> -->
<!-- 			<name>JFrog OSS Snapshots</name> -->
<!-- 			<url>http://oss.jfrog.org/artifactory/oss-snapshot-local</url> -->
<!-- 			<releases> -->
<!-- 				<enabled>false</enabled> -->
<!-- 			</releases> -->
<!-- 		</pluginRepository> -->

<!-- 		<pluginRepository> -->
<!--             <id>sonatype-snapshots</id> -->
<!-- 			<name>Sonatype Snapshots</name> -->
<!--             <url>https://oss.sonatype.org/content/repositories/snapshots</url> -->
<!--         	<releases> -->
<!-- 				<enabled>false</enabled> -->
<!-- 			</releases> -->
<!--             <snapshots> -->
<!--                 <enabled>true</enabled> -->
<!--             </snapshots> -->
<!-- 		</pluginRepository> -->
		
	</pluginRepositories>
	
	<build>
		<plugins>
<!-- 			<plugin> -->
<!-- 			    <groupId>io.swagger</groupId> -->
<!-- 			    <artifactId>swagger-codegen-maven-plugin</artifactId> -->
<!-- 			    <version>2.2.0-SNAPSHOT</version>			     -->
<!-- 					<executions> -->
<!-- 						<execution> -->
<!-- 							<goals> -->
<!-- 								<goal>generate</goal> -->
<!-- 							</goals> -->
<!-- 							<configuration> -->
<!-- 								<inputSpec>src/test/resources/swagger-broker/service_broker.json</inputSpec> -->
<!-- 								<language>springboot</language> -->
<!-- 								<library>feign</library> -->
<!-- 								<apiPackage>com.orange.oss.bosh.deployer.cfbroker.swagger</apiPackage> -->
<!-- 								<configOptions> -->
<!-- 									<sourceFolder>src/test/java</sourceFolder> -->
<!-- 								</configOptions> -->
<!-- 							</configuration> -->
<!-- 						</execution> -->
<!-- 					</executions> -->
<!--     			</plugin>			 -->
		</plugins>
	</build>
	

</project>
